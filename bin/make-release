#!/usr/bin/env ruby

require 'json'
require 'bundler/setup'
require 'open3'

suffix = ARGV[0] ? "-#{ARGV[0]}" : ""
json_output = "json-outputs#{suffix}"
pdf_output = "pdf-outputs#{suffix}"

FileUtils.rm_rf(json_output) if Dir.exist?(json_output)
Dir.mkdir(json_output)

FileUtils.rm_rf(pdf_output) if Dir.exist?(pdf_output)
Dir.mkdir(pdf_output)

# I don't know how entry-point discovery should work, so I'm just going to use a JSON file for now
module_files = JSON.parse!(File.read('modules.json'))

module_files.each do |module_file|
  next unless File.exist?(module_file)

  output_json_path = File.join(json_output, File.basename(module_file, '.rb') + '.json')
  output_pdf_path = File.join(pdf_output, File.basename(module_file, '.rb') + '.pdf')

  puts "Rendering #{module_file}..."

  # We shell out to the CLI to keep the code isolated
  output, stderr, status = Open3.capture3("bundle exec bcf-fp-generate . #{module_file}")

  puts stderr

  if status.success?
    File.write(output_json_path, output)
  else
    warn "Error generating JSON for #{module_file}: #{output}"
  end

  # Generate the PDF
  `bundle exec bin/render-pdf "#{module_file}" "#{output_pdf_path}"`
end
