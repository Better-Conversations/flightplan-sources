#!/usr/bin/env ruby

# Setup bundler so we can require gems
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
require 'bundler/setup'

require 'bcf/flightplans'
require 'filewatcher'
require 'httparty'

if ARGV.length != 3
  warn "Usage: #{__FILE__} <flightplan.rb> <flightplan_version> <host>"
  exit 1
end

DEV_HOST = ARGV[2]

def push_change(file)
  # Each load will re-run the code in this ruby process.
  # This means that we may have pre-existing state that messes things up.
  # But for now to allow for vscode to run things we want it to be a ruby file
  # not a shell script so this will work.
  load(file)

  flight_plan = BCF::FlightPlans::FLIGHT_PLANS.last
  HTTParty.post(
    "http://#{DEV_HOST}/flightplans/development_live_reload_flightplan",
    headers: {
      "Content-Type" => "application/json"
    },
    body: {
      flightplan_version: ARGV[1],
      flight_plan: flight_plan
    }.to_json
  )

  puts "Pushed changes"
  flight_plan.module_number
end

module_number = push_change(ARGV[0])

test_url = URI.parse("http://#{DEV_HOST}/flightplans/test_flightplan")
test_url.query = URI.encode_www_form(
  'flightplan_delivery_testing[version]': ARGV[1],
  'flightplan_delivery_testing[module_number]': module_number
)

puts "Test URL\n#{test_url}"

Filewatcher.new(ARGV[0]).watch do |changes|
  push_change(ARGV[0])
end
